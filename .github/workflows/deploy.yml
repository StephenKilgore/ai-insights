name: Build and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # Explicitly using the latest major version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Explicitly using the latest major version

      - name: Cache Docker layers
        uses: actions/cache@v3 # Explicitly using the latest major version
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker images
        run: |
          docker buildx build --tag ai-insights-collector:latest --load ./data-collector
          docker buildx build --tag ai-insights-analyzer:latest --load ./data-analyzer

      - name: Save Docker images as tar files
        run: |
          docker save ai-insights-collector:latest -o collector.tar
          docker save ai-insights-analyzer:latest -o analyzer.tar

      - name: Transfer images to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "~/*.tar"
          target: "~/projects/ai-insights/"

      - name: Load Docker images on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker load -i ~/projects/ai-insights/collector.tar
            docker load -i ~/projects/ai-insights/analyzer.tar

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker-compose -f ~/projects/ai-insights/docker-compose.yml up -d
