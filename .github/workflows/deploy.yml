name: Build and Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker images
        run: |
          docker buildx build --tag ai-insights-collector:latest --load ./data-collector
          docker buildx build --tag ai-insights-analyzer:latest --load ./data-analyzer

      - name: Save Docker images as tar files
        run: |
          docker save ai-insights-collector:latest -o /tmp/collector.tar
          docker save ai-insights-analyzer:latest -o /tmp/analyzer.tar
          ls -lh /tmp/collector.tar /tmp/analyzer.tar # Verify tar files

      - name: Ensure tar files exist
        run: |
          if [ ! -f /tmp/collector.tar ]; then
            echo "collector.tar not found!"
            exit 1
          fi
          if [ ! -f /tmp/analyzer.tar ]; then
            echo "analyzer.tar not found!"
            exit 1
          fi

      - name: Save SSH private key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /tmp/private_key
          chmod 600 /tmp/private_key

      - name: Transfer images to EC2 using SCP
        run: |
          scp -v -i /tmp/private_key -o StrictHostKeyChecking=no /tmp/collector.tar ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/projects/ai-insights/collector.tar
          scp -v -i /tmp/private_key -o StrictHostKeyChecking=no /tmp/analyzer.tar ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}:~/projects/ai-insights/analyzer.tar

      - name:
        run: |
          ssh -v -i /tmp/private_key -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
          docker load -i ~/projects/ai-insights/collector.tar
          docker load -i ~/projects/ai-insights/analyzer.tar
          docker compose -f ~/projects/ai-insights/docker-compose.yml up -d
          EOF
